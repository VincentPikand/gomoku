html {
  font-size: 62.5%;
  font-family: 'Poppins', sans-serif;
}
body {
  margin: 0;
  padding: 0;
  background-color: #065535;
}
/* HOME PAGE */
#stageOneGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 0.3fr 10rem 15rem;
}
.welcome {
  color: white;
  grid-row: 1 / 2;
  text-align: center;
  font-size: 5rem;
}
#buttonHolder {
  place-self: center;
  text-align: center;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 1fr;
}
#nrField {
  place-self: center;
}
#roomId {
  text-align: center;
  padding: 1.5rem 2rem;
  border-radius: 2rem;
  border: none;
  text-decoration: none;
  font-family: 'Poppins', sans-serif;
  margin: 2rem 0 1.5rem 0;
}
#join {
  width: 33.9183rem; /* match start game button... */
}
#wrongId {
  display: block;
  font-size: 1.7rem;
  color: #ffd700;
}
.homepageBtn {
  border-radius: 2rem;
  text-decoration: none;
  border: none;
  background-color: #ffd700;
  place-self: center;
  padding: 1rem 2rem;
  font-size: 3rem;
  font-family: 'Poppins', sans-serif;
}
/* stageTwo */
#stageTwoGrid {
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: auto;
}
.waiting {
  text-align: center;
  font-size: 4rem;
  color: white;
}
.saving {
  text-align: center;
  font-size: 4rem;
  color: white;
}
/* GAME PAGE */
#containerWrapper {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 5rem 2fr 5rem;
}
.container {
  display: grid;
  grid-template-columns: repeat(15, 1fr);
  grid-template-rows: repeat(15, 1fr);
}
.btn {
  height: 25px;
  width: 25px;
  background-color: white;
  place-self: center;
  margin: 1rem;
  border-radius: 50%;
  text-decoration: none;
  border: none;
  cursor: pointer;
}

.f {
  background-color: #065535;
  cursor: auto;
}
.red {
  background-color: red;
}
.yellow {
  background-color: yellow;
}
.pseudoRed {
  background-color: red;
}
.pseudoYellow {
  background-color: yellow;
}
.top {
  font-size: 50px;
  text-align: center;
  color: white;
}
.turnStatus {
  font-size: 50px;
  text-align: center;
  color: white;
  display: none;
}
@media only screen and (min-width: 600px){
  .container {
  /* width: 80%; */
  place-self: center;
  }
}
@media only screen and (min-width: 992px){
  /* .container {
    width: 40%;
  } */
  /* .btn {
    height: 10px;
    width: 10px;
  } */
}
/* ANIMATIONS */
.fadeIn {
  animation: fadein 2s;
}
@keyframes fadein {
  from { opacity: 0; }
  to   { opacity: 1; }
}
@keyframes blink {
  /**
   * At the start of the animation the dot
   * has an opacity of .2
   */
  0% {
    opacity: .2;
  }
  /**
   * At 20% the dot is fully visible and
   * then fades out slowly
   */
  20% {
    opacity: 1;
  }
  /**
   * Until it reaches an opacity of .2 and
   * the animation can start again
   */
  100% {
    opacity: .2;
  }
}

.saving span {
  /**
   * Use the blink animation, which is defined above
   */
  animation-name: blink;
  /**
   * The animation should take 1.4 seconds
   */
  animation-duration: 1.4s;
  /**
   * It will repeat itself forever
   */
  animation-iteration-count: infinite;
  /**
   * This makes sure that the starting style (opacity: .2)
   * of the animation is applied before the animation starts.
   * Otherwise we would see a short flash or would have
   * to set the default styling of the dots to the same
   * as the animation. Same applies for the ending styles.
   */
  animation-fill-mode: both;
}

.saving span:nth-child(2) {
  /**
   * Starts the animation of the third dot
   * with a delay of .2s, otherwise all dots
   * would animate at the same time
   */
  animation-delay: .2s;
}

.saving span:nth-child(3) {
  /**
   * Starts the animation of the third dot
   * with a delay of .4s, otherwise all dots
   * would animate at the same time
   */
  animation-delay: .4s;
}